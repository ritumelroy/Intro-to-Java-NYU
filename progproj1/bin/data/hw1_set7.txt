#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#define MAX 1000

void initialize(int arr[MAX][MAX]){

	int i,j;

	for(i = 0;i<MAX;i++){

		for(j = 0;j<MAX;j++){

		arr[i][j] = -1;

		}	

	}

}

int readFile(int arr[MAX][MAX],int *i,int *j,char *file){

	FILE *fp;

	fp = fopen(file,"r");

	char *line = (char*)malloc(sizeof(char)*MAX);
	int p;

	if(fp == NULL){
		return -1;
	}
	
	*i=0;
	*j=0;
    int len=0;
	while(!feof(fp)){
		fscanf(fp,"%s",line);
		len = strlen(line);
            *j=0;
			for(p = 0;p<len;p++){

				if(line[p] == '.'){

					arr[*i][*j] = 0;

				}else if(line[p] == 'x'){

					arr[*i][*j] = 1;

				}

				*j = *j + 1;

			}
			*j=0;

			*i = *i + 1;

		}
	
	
    *i=*i-1;
	*j=len;

	fclose(fp);
	return 0;

}

void nextGen(int arr[MAX][MAX],int i,int j){

	int count = 0;

	int p,q;
	
	int prevState[i][j];
	
	for(p=0;p<i;p++){
	    for(q=0;q<j;q++){
	        prevState[p][q] = arr[p][q];
	    }
	}

	for(p = 0;p<i;p++){

		for(q = 0;q<j;q++){

		count = 0;

		if(prevState[(p+1)%i][q] == 1){

			count++;

		}		

		if(prevState[(p-1)%i][q] == 1){

			count++;

		}

		if(prevState[p][(q+1)%i] == 1){

			count++;

		}

		if(prevState[p][(q-1)%i] == 1){

			count++;

		}	

		if(prevState[(p+1)%i][(q+1)%i] == 1){

			count++;

		}

		if(prevState[(p+1)%i][(q-1)%i] == 1){

			count++;

		}

		if(prevState[(p-1)%i][(q+1)%i] == 1){

			count++;

		}

		if(prevState[(p-1)%i][(q-1)%i] == 1){

			count++;

		}

		if(count >= 2 && count < 4){

			if(prevState[p][q] == 0){

				if(count == 3){

					arr[p][q] = 1;

				}

			}else{

				arr[p][q] = 1;

			}

		}

		else if(count > 3){

			arr[p][q] = 0;

		}else if(count < 2){

			arr[p][q] = 0;

		}

	}

}

}

void write(int arr[MAX][MAX],int i,int j){

	int p,q;

	printf("\n World Are : \n");

	for(p = 0;p<i;p++){

		for(q = 0;q<j;q++){

		if(arr[p][q] == 0){

			printf(".");

		}else if(arr[p][q] == 1){

			printf("x");

		}

	}

	printf("\n");

	}

}

int main(int argc,char *argv[]){

	if(argc != 3){

	printf("\nYou didn't pass the argument please give two argument ");

	return -1;

	}	

	char *file = (char*)malloc(sizeof(char)*(strlen(argv[1]+1)));

	strcpy(file,argv[1]);

	int tick = (int)atoi(argv[2]);

	int arr[MAX][MAX];

	int i,j,k;

	initialize(arr);

	int flag = readFile(arr,&i,&j,file);
	if(flag!=-1){
	    for(k = 0;k<tick;k++){

			nextGen(arr,i,j);

		}	
		write(arr,i,j);
	}
	
	return 0;

}